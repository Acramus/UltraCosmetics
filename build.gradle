plugins {    id 'com.jfrog.bintray' version '1.7.3'    id 'java'    id 'maven-publish'}allprojects {    apply plugin: 'java'    apply plugin: 'eclipse'    apply plugin: 'idea'    group = 'be.isach'    compileJava.options.encoding = 'UTF-8'    sourceCompatibility = 1.8    targetCompatibility = 1.8    configurations {        shaded        compile.extendsFrom shaded    }    afterEvaluate {        jar {            dependsOn configurations.shaded            from configurations.shaded.collect {                it.isDirectory() ?                        it :                        zipTree(it)            }        }    }}def versionObj = new Version(major: 2, minor: 5, revision: 0)version = "$versionObj"boolean local = falseif (local) libsDirName = '/Users/sacha/Documents/Development/Java/UC_1_11/testserver/plugins'bintray {    user = 'sach'    key = 'TODO'    publications = ["BintrayRelease"]    pkg {        repo = 'maven'        name = 'UltraCosmetics'        licenses = ['Apache-2.0']        vcsUrl = 'https://github.com/iSach/UltraCosmetics.git'        publish = true        version {            name = project.version            released = new Date()        }    }}publishing {    publications {        BintrayRelease(MavenPublication) {            from components.java            groupId group            artifactId archivesBaseName            version version        }    }}dependencies {    subprojects.each { p ->        shaded(p) {            transitive false        }    }}subprojects {    repositories {        mavenLocal()        mavenCentral()        // Vault        maven {            url 'http://nexus.hc.to/content/repositories/pub_releases'        }        // Lib's Disguises        maven {            url 'http://repo.md-5.net/content/groups/public/'        }        maven {            url 'https://repo.isach.be'        }        // BungeeCord        maven {            url 'https://oss.sonatype.org/content/repositories/snapshots'        }    }}class Version {    String major, minor, revision    String getBuild() {        System.getenv("BUILD_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?: "DEV"    }    String toString() {        "${major}.${minor}.${revision}_$build"    }}